<template>

	<view class="content">
		<z-paging ref="paging" @onRefresh="onrefresh">
			<custom-refresher slot="refresher" slot-scope="{refresherStatus}" :status="refresherStatus">
			</custom-refresher>
			<cell>
				<view class="container">
					<view class="main">
						<view class="avatar">
							<u-avatar :src="getUserInfoField(`avatar`)" class="avatarImg" size="150"
								@click="showMyAvatar"></u-avatar>
						</view>
						<u-cell-group>
							<u-cell title="姓名" :label="getUserInfoField(`name`)" :clickable="true" size='large'>
							</u-cell>
							<u-cell title="性别" :label="getUserInfoField(`sex`)" :clickable="true" size='large'></u-cell>
							<u-cell title="学号" :label="getUserInfoField(`numberCard`)" :clickable="true" size='large'>
							</u-cell>
							<u-cell title="手机号" :label="getUserInfoField(`phone`)" :clickable="true" size='large'>
							</u-cell>
							<u-cell title="学校" :label="getUserInfoField(`school`)" :clickable="true" size='large'>
							</u-cell>
							<u-cell title="浅分享一下APP吧!" size='large' :isLink="true" @click="shareApp"></u-cell>
							<u-cell title="GitHub仓库" size='large' :isLink="true" @click="gotoGithub"></u-cell>
						</u-cell-group>
					</view>
					<u-button class="loginBtn" type="primary" @click="toLogin" text="登陆/重新登录"></u-button>
				</view>
			</cell>
		</z-paging>
	</view>
</template>

<script>
	import UserBiz from '@/biz/user.js'
	import UserEntity from '@/entity/User.js'
	import {
		mapGetters
	} from 'vuex'

	export default {
		data() {
			return {};
		},
		computed: {
			...mapGetters({
				userInfo: 'user/userEntity'
			})
		},
		methods: {
			getUserInfoField(name) {
				try {
					return this.userInfo[name]
				} catch (e) {

				}
				return ''
			},
			shareApp() {
				plus.nativeUI.alert("一款好的APP才不会内置这样的功能嗷！谢谢您的使用！", () => {}, "温馨提示")
			},
			gotoGithub() {
				let url = 'https://github.com/james-curtis/chaoxing-sign-app'
				plus.nativeUI.confirm(url, function(e) {
					console.log("plus.nativeUI.confirm", e)
					if (e.index == 0) {
						plus.runtime.openURL(url)
					} else if (e.index == 1) {
						uni.setClipboardData({
							data: url
						})
					}
				}, {
					"title": "GitHub仓库地址",
					"buttons": ["打开", "复制"],
				});
			},
			toLogin() {
				uni.navigateTo({
					url: 'login'
				})
			},
			async initUserInfo() {
				await this.$store.dispatch('user/getUserInfo')
			},
			onrefresh(e) {
				this.$store.dispatch('user/getUserInfo', true).then(() => {
					console.log(this.userInfo)
				})
			},
			showMyAvatar() {
				uni.previewImage({
					urls: [this.getUserInfoField('avatar')]
				})
			}
		},
		onLoad() {
			this.initUserInfo()
		}
	}
</script>

<style lang="scss" scoped>
	.refresh-view {
		width: 750rpx;
		height: 80px;
		flex-direction: row;
		align-items: center;
		justify-content: center;

		.loading-text {
			font-size: 14px;
		}
	}

	.list {
		flex: 1;
	}

	.container {
		padding: 20px;

		.avatar {
			justify-content: center;
			margin: 10rpx 0 30rpx 0;
			flex-direction: row;
		}

		.loginBtn {
			margin-top: 15px;
		}
	}
</style>
